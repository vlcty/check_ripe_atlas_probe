#!/usr/bin/perl
use strict;
use LWP::UserAgent;
use LWP::Protocol::https;
use Getopt::Long;
use JSON;

our $ARG_PROBE = undef;

sub exitCritical {
    printf("CRITICAL - %s\n", shift);
    exit(2);
}

sub exitUnknown {
    printf("UNKNOWN - %s\n", shift);
    exit(3);
}

sub parseArguments {
    GetOptions(
        '--probe=i' => \$ARG_PROBE
    );

    if ( ! defined($ARG_PROBE) ) {
        exitUnknown('No probe was passed. Use the --probe parameter');
    }

    if ( $ARG_PROBE !~ /^\d+$/ ) {
        exitUnknown('Probe parameter has to be numeric');
    }
}

sub extractAPIResult {
    my $rawJSON = shift;
    my $json = decode_json($rawJSON);

    if ( $json ) {
        if ( exists($json->{status}) ) {
            if ( $json->{status}->{name} eq 'Connected' ) {
                printf("OK - Probe %d is connected since %s\n", $ARG_PROBE, $json->{status}->{since});
                exit(0);
            }
            else {
                exitCritical(sprintf('Probe %d is not connected', $ARG_PROBE));
            }
        }
        else {
            exitCritical('Was not able to extract status from received JSON: ' . $rawJSON);
        }
    }
    else {
        exitCritical('Was not able to parse the received JSON: ' . $rawJSON);
    }
}

sub fetchAPIResult {
    my $lwp = LWP::UserAgent->new();
    $lwp->agent('check_ripe_atlas_probe');

    my $result = $lwp->get('https://atlas.ripe.net/api/v2/probes/' . $ARG_PROBE);

    if ( $result->is_success() ) {
        extractAPIResult($result->decoded_content);
    }
    else {
        exitCritical('Was not able to contact API: ' . $result->status_line);
    }
}

sub main {
    parseArguments();
    fetchAPIResult();
}

main();
